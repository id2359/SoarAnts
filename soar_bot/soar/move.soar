gp {ants*propose*move
(state <s> ^name ants ^ant <ant> ^turn <t> ^me <me>)
(<me> ^ant <ant>)
(<ant> ^player-id 0 ^row <row> ^col <col>)
-->
(<s> ^operator <o> + =)
(<o> ^name move ^ant <ant> ^direction [up down left right stay] )}

sp {ants*elaborate*move-destination*up
(state <s> ^name ants ^operator <o> +)
(<o> ^name move ^direction up ^ant <ant>)
(<ant> ^square.up <neighbor-square>)
-->
(<o> ^destination <neighbor-square>)}

sp {ants*elaborate*move-destination*down
(state <s> ^name ants ^operator <o> +)
(<o> ^name move ^direction down ^ant <ant>)
(<ant> ^square.down <neighbor-square>)
-->
(<o> ^destination <neighbor-square>)}

sp {ants*elaborate*move-destination*right
(state <s> ^name ants ^operator <o> +)
(<o> ^name move ^direction right ^ant <ant>) 
(<ant> ^square.right <neighbor-square>)
-->
(<o> ^destination <neighbor-square>)}

sp {ants*elaborate*move-destination*left
(state <s> ^name ants ^operator <o> +)
(<o> ^name move ^direction left ^ant <ant>)
(<ant> ^square.left <neighbor-square>)
-->
(<o> ^destination <neighbor-square>)}

sp {ants*elaborate*move-destination*stay
(state <s> ^name ants ^operator <o> +)
(<o> ^name move ^direction stay ^ant <ant>)
(<ant> ^square <square>)
-->
(<o> ^destination <square>)}

sp {ants*move*reject-collision*water
(state <s> ^name ants ^operator <o> +)
(<o> ^name move ^destination <d>)
(<d> ^water true ^col <col> ^row <row>)
-->
(write |Rejecting water collision at | <col> |, | <row> (crlf))
(<s> ^operator <o> -)}

sp {ants*move*reject-collision*ant
(state <s> ^name ants ^operator <o> +)
(<o> ^name move ^destination <dest> ^ant <ant>)
(<dest> ^destination true)
(<dest> ^col <col> ^row <row>)
-->
(write |Rejecting ant collision at | <col> |, | <row> (crlf))
(<s> ^operator <o> -)}

sp {ants*move*reject-collision*ant-unmoved
(state <s> ^name ants ^operator <o> +)
(<o> ^name move ^destination <dest> ^ant <ant>)
(<dest> ^ant {<> <ant> <other-ant>})
(<dest> ^col <col> ^row <row>)
-->
(write |Rejecting ant collision unmoved at | <col> |, | <row> (crlf))
(<s> ^operator <o> -)}

#sp {ants*elaborate*prefer*move-stay
#(state <s> ^name ants ^operator <move> + ^operator <stay> +)
#(<move> ^name move ^direction {<> stay})
#(<stay> ^name move ^direction stay)
#-->
#(<s> ^operator <stay> < <move>)}

#sp {ants*move*elaborate*prefer-food
#(state <s> ^name ants ^operator <move1> + ^operator {<> <move1> <move2>} +)
#(<move1> ^name move ^ant <a> ^direction << left right up down >>)
#(<move2> ^name move ^ant <a> ^direction << up left right down >>)
#(<move1> ^destination.destination.distance-to-food <dist1>)
#(<move2> ^destination.destination.distance-to-food {> <dist1> <dist2>})
#-->
#(<s> ^operator <move1> > <move2>)}

sp {ants*apply*move-direction
(state <s> ^operator <o> ^io.output-link <ol> ^ant <a>)
(<o> ^name move ^direction {<d> << up down left right >>} ^ant <a> ^destination <dest>)
(<a> ^col <col> ^row <row>)
-->
(<ol> ^move <m>)
(<m> ^col <col> ^row <row> ^direction <d>)}

sp {ants*apply*move-stay
(state <s> ^operator <o> ^ant <a> ^io.output-link <ol>)
(<o> ^name move ^direction stay ^ant <a> ^destination <dest>)
(<a> ^col <col> ^row <row>)
-->
(<ol> ^move <m>)
(<m> ^col <col> ^row <row> ^direction stay)}

sp {ants*elaborate*direction-structs
(state <s> ^name ants)
-->
(<s> ^direction-structs <rd>)
(<rd> ^up <up> ^down <down> ^left <left> ^right <right>)
(<up> ^cw <right>)
(<right> ^cw <down>)
(<down> ^cw <left>)
(<left> ^cw <up>)
(<up> ^ccw <left>)
(<left> ^ccw <down>)
(<down> ^ccw <right>)
(<right> ^ccw <up>)
(<up> ^opposite <down>)
(<down> ^opposite <up>)
(<left> ^opposite <right>)
(<right> ^opposite <left>)
(<right> ^name right)
(<left> ^name left)
(<up> ^name up)
(<down> ^name down)}

sp {ants*elaborate*move*direction
(state <s> ^name ants ^operator <o> + ^direction-structs <rd>)
(<o> ^name move ^direction { << left right up down >> <dir-name> })
(<rd> ^<dir-name> <dir-struct>)
(<dir-struct> ^name <dir-name>)
-->
(<o> ^direction-struct <dir-struct>)}

sp {ants*rl*move*mark-toward-food
(state <s> ^name ants ^operator <o> +)
(<o> ^name move ^ant <ant> ^destination.distance-to-food <dist>)
-{
(<s> ^operator { <> <o> <o2> } +)
(<o2> ^name move ^ant <ant> ^destination.distance-to-food < <dist>)
}
-->
(<o> ^toward-food true)}

sp {ants*rl*move*toward-food
(state <s> ^name ants ^operator <o> +)
(<o> ^toward-food true)
-->
(<s> ^operator <o> = 0.0)}

sp {ants*rl*move*not-toward-food
(state <s> ^name ants ^operator <o> +)
(<o> -^toward-food true)
-->
(<s> ^operator <o> = 0.0)}

#sp {ants*rl*move*collect-food
#(state <s> ^name ants ^operator <o> +)
#(<o> ^name move ^ant <a> ^destination.distance-to-food < 2)
#-->
#(<s> ^operator <o> = 0.0)}

#sp {ants*rl*move*not-collect-food
#(state <s> ^name ants ^operator <o> +)
#(<o> ^name move ^ant <a> -^destination.distance-to-food < 2)
#-->
#(<s> ^operator <o> = 0.0)}

#sp {ants*rl*move*toward-not-visible
#(state <s> ^name ants ^operator <o> +)
#(<o> ^name move ^ant <ant> ^destination.distance-to-not-visible <dist>)
#-{
#(<s> ^operator { <> <o> <o2> } +)
#(<o2> ^name move ^ant <ant> ^destination.distance-to-not-visible < <dist>)
#}
#-->
#(<s> ^operator <o> = 0.0)}

#sp {ants*rl*move*not-toward-not-visible
#(state <s> ^name ants ^operator <o> +)
#(<o> ^name move ^ant <ant> ^destination.distance-to-not-visible <dist>)
#(<s> ^operator { <> <o> <o2> } +)
#(<o2> ^name move ^ant <ant> ^destination.distance-to-not-visible < <dist>)
#-->
#(<s> ^operator <o> = 0.0)}


